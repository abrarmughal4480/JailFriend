import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Head from 'next/head';
import { DarkModeProvider } from '@/contexts/DarkModeContext';
import { PrivacyProvider } from '@/contexts/PrivacyContext';
import { GroupThemeProvider } from '@/contexts/GroupThemeContext';


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" style={{ colorScheme: 'light' }}>
      <head>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="theme-color" content="#ffffff" />
        <meta name="color-scheme" content="light" />
        <meta name="apple-mobile-web-app-status-bar-style" content="default" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="mobile-web-app-capable" content="yes" />
        <meta name="msapplication-navbutton-color" content="#ffffff" />
        <meta name="msapplication-TileColor" content="#ffffff" />
        <style dangerouslySetInnerHTML={{
          __html: `
            /* Force light mode globally - ignore system preferences */
            :root {
              color-scheme: light !important;
            }
            
            /* Override any system dark mode - especially for mobile */
            @media (prefers-color-scheme: dark) {
              :root {
                color-scheme: light !important;
              }
            }
            
            /* Mobile-specific overrides */
            @media (max-width: 768px) {
              :root {
                color-scheme: light !important;
                --mobile-theme: light !important;
                --mobile-color-scheme: light !important;
              }
              
              @media (prefers-color-scheme: dark) {
                :root {
                  color-scheme: light !important;
                  --mobile-theme: light !important;
                  --mobile-color-scheme: light !important;
                }
              }
            }
            
            /* iOS-specific overrides */
            @supports (-webkit-touch-callout: none) {
              :root {
                color-scheme: light !important;
                --ios-theme: light !important;
              }
              
              @media (prefers-color-scheme: dark) {
                :root {
                  color-scheme: light !important;
                  --ios-theme: light !important;
                }
              }
            }
            
            /* Android-specific overrides */
            @media screen and (-webkit-min-device-pixel-ratio: 0) {
              :root {
                color-scheme: light !important;
                --android-theme: light !important;
              }
              
              @media (prefers-color-scheme: dark) {
                :root {
                  color-scheme: light !important;
                  --android-theme: light !important;
                }
              }
            }
            
            /* Ensure all elements start in light mode */
            * {
              color-scheme: light !important;
            }
            
            /* Override Tailwind's dark mode unless explicitly enabled */
            .dark {
              color-scheme: light !important;
            }
            
            /* Force light backgrounds */
            html, body {
              background-color: #f9fafb !important;
              color: #111827 !important;
            }
          `
        }} />
      </head>
      <body className="bg-gray-50 overflow-x-hidden transition-colors duration-200" style={{ colorScheme: 'light' }}>
        <div className="w-full overflow-x-hidden">
          <DarkModeProvider>
            <PrivacyProvider>
              <GroupThemeProvider>
                {children}
              </GroupThemeProvider>
            </PrivacyProvider>
          </DarkModeProvider>
        </div>
      </body>
    </html>
  );
}
